{"version":3,"file":"static/js/901.15db87f2.chunk.js","mappings":"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","sources":["components/redux/contacts/selectors.js","components/redux/contacts/operations.js","components/ContactsForm/ContactsForm.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const seectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContact = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContact, selectFilter],\n    (contacts, filter) => {\n      return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()))\n    }\n)","\nimport axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// axios.defaults.baseURL = 'https://67333aee2a1b1a4ae112a533.mockapi.io';\n\nexport const fetchContacts = createAsyncThunk(\n    'contacts/fetchAll',\n    async (_, thunkAPI) => {\n        try {\n            const response = await axios.get('/contacts');\n            return response.data;\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error.message);\n        }\n    }\n);\n\nexport const addContact = createAsyncThunk(\n    'contacts/addContact',\n    async ({ name, number }, thunkAPI) => {\n        try {\n            const response = await axios.post('/contacts', { name, number });\n            return response.data;\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error.message);\n        }\n    }\n);\n\nexport const deleteContact = createAsyncThunk(\n    'contacts/deleteContact',\n    async (contactId, thunkAPI) => {\n        try {\n            const response = await axios.delete(`/contacts/${contactId}`);\n            return response.data;\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error.message);\n        }\n    }\n)\n","\n\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContact } from 'components/redux/contacts/selectors';\nimport { addContact } from 'components/redux/contacts/operations';\n\n\n\n\nconst nameId = nanoid();\nconst numberId = nanoid();\n\nexport default function ContactForm(){\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContact);\n  \n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const anExistingContact = contacts.some(contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim());\n  \n  if (anExistingContact) {\n    alert(`${name} is already in contacts`);\n    return;\n  }\n  \n  dispatch(addContact({ name, number }));\n  setName('');\n  setNumber('');\n  };\n  \n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\nreturn (\n  <form onSubmit = {handleSubmit}>\n    <label htmlFor={nameId}>Name</label>\n        <input type=\"text\" name=\"name\" value={name} onChange={handleChange} required/>\n        \n    \n\n    <label htmlFor={numberId}>Number</label>\n        <input type='tel' name=\"number\" value={number} onChange={handleChange} required/>\n        \n\n      <button type=\"submit\">Add contact</button>\n    \n\n  </form>\n)\n};\n\n\n\n","import ContactForm from \"components/ContactsForm/ContactsForm\";\nimport { fetchContacts } from \"components/redux/contacts/operations\";\n// import { seectIsLoading } from \"components/redux/contacts/selectors\";\nimport { useEffect } from \"react\";\nimport { useDispatch} from \"react-redux\";\n// import ContactList from \"components/ContactsList/ContactsList\";\n// import Filter from \"components/Filter/Filter\";\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    // const isLoading = useSelector(seectIsLoading);\n\n    useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n    return (\n        <>\n            <h1>Your contacts!</h1>\n            <ContactForm />\n            {/* <Filter/>\n            <ContactList /> */}\n        </>\n    )\n}\n\n\n\n\n "],"names":["selectContact","state","contacts","items","createSelector","filter","contact","name","toLowerCase","includes","fetchContacts","createAsyncThunk","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_","thunkAPI","response","_context","prev","next","axios","sent","abrupt","data","t0","rejectWithValue","message","stop","_x","_x2","apply","arguments","addContact","_ref3","_callee2","_ref2","number","_context2","_x3","_x4","_ref4","_callee3","contactId","_context3","concat","_x5","_x6","nameId","nanoid","numberId","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","useSelector","dispatch","useDispatch","handleChange","evt","_evt$target","target","value","_jsxs","onSubmit","preventDefault","some","trim","alert","children","_jsx","htmlFor","type","onChange","required","Contacts","useEffect","_Fragment"],"sourceRoot":""}